{"version":3,"file":"index.min.js","mappings":"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","sources":["webpack:///./hooks/use-initial-form-memo.ts","webpack:///./use-form.ts","webpack:///./utils.ts","webpack:///./utils/handlers-key-exists.ts","webpack:///./utils/values-key-exists.ts","webpack:///external \"react\"","webpack:///webpack/bootstrap","webpack:///./index.ts"],"sourcesContent":["import { useCallback, useRef } from \"react\";\nimport { InitialForm } from \"../types\";\n\nexport const useInitialFormMemo = (initialForm?: InitialForm<string>) => {\n  const initialFormMemo = useRef(initialForm ?? {});\n\n  const initialFormMemoHandler = useCallback(\n    (initialForm: InitialForm<string>) => {\n      initialFormMemo.current = initialForm;\n    },\n    []\n  );\n\n  const addFieldsToMemoHandler = useCallback(\n    (newFields: InitialForm<string>) => {\n      initialFormMemo.current = {\n        ...newFields,\n        ...initialFormMemo.current,\n      };\n    },\n    []\n  );\n\n  const removeFieldsFromMemoHandler = useCallback(\n    <F extends any>(...fieldsName: F[]) => {\n      initialFormMemo.current = Object.fromEntries(\n        Object.entries(initialFormMemo.current).filter(\n          ([field]) => !fieldsName.includes(field as F)\n        )\n      );\n    },\n    []\n  );\n\n  return {\n    initialFormMemo,\n    initialFormMemoHandler,\n    addFieldsToMemoHandler,\n    removeFieldsFromMemoHandler,\n  };\n};\n","import { useInitialFormMemo } from \"./hooks/use-initial-form-memo\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { Handlers, InitialForm, Values } from \"./types\";\nimport { initialFn, reduceConfigTransform } from \"./utils\";\n\nexport const useForm = <T extends InitialForm<any> | undefined>(\n  initialForm?: T\n) => {\n  const {\n    initialFormMemo,\n    initialFormMemoHandler,\n    addFieldsToMemoHandler,\n    removeFieldsFromMemoHandler,\n  } = useInitialFormMemo(initialForm);\n\n  //#region form\n  const [form, setForm] = useState(() =>\n    initialForm ? initialFn(initialForm) : initialFn({})\n  );\n\n  const addFieldsToFormHandler = useCallback(\n    (newFields: ReturnType<typeof initialFn>) => {\n      setForm((prev) => ({\n        ...newFields,\n        ...prev,\n      }));\n    },\n    []\n  );\n\n  const removeFieldsFromFormHandler = useCallback(\n    <F extends any>(...fieldsName: F[]) => {\n      setForm((prev) =>\n        Object.fromEntries(\n          Object.entries(prev).filter(\n            ([field]) => !fieldsName.includes(field as F)\n          )\n        )\n      );\n    },\n    []\n  );\n\n  const initialFormHandler = useCallback(\n    (initialForm: InitialForm<string>) => {\n      setForm(() => initialFn(initialForm));\n      initialFormMemoHandler(initialForm);\n    },\n    [initialFormMemoHandler]\n  );\n\n  const reset = useCallback(\n    () => setForm(() => initialFn(initialFormMemo.current)),\n    [initialFormMemo]\n  );\n\n  const clear = useCallback(\n    () =>\n      setForm((prev) =>\n        reduceConfigTransform(prev, (config) => ({\n          ...config,\n          value: \"\",\n          touched: true,\n          error: config.validation && config.validation(\"\"),\n        }))\n      ),\n    []\n  );\n  //#endregion\n\n  const addFields = useCallback(\n    (configs: InitialForm<string>) => {\n      addFieldsToMemoHandler(configs);\n\n      addFieldsToFormHandler(initialFn(configs));\n    },\n    [addFieldsToMemoHandler, addFieldsToFormHandler]\n  );\n\n  const removeField = useCallback(\n    <F extends any>(...fieldsName: F[]) => {\n      removeFieldsFromMemoHandler(...fieldsName);\n\n      removeFieldsFromFormHandler(...fieldsName);\n    },\n    [removeFieldsFromMemoHandler, removeFieldsFromFormHandler]\n  );\n\n  const setValue = useCallback(\n    (key: keyof T, value: any, touched?: boolean) => {\n      setForm((prev) => {\n        const config = prev[key];\n\n        if (!config) return prev;\n\n        return {\n          ...prev,\n          [key]: {\n            ...config,\n            error: config.validation && config.validation(value),\n            touched: touched ?? config.touched,\n            value,\n          },\n        };\n      });\n    },\n    []\n  );\n\n  const setValues = useCallback(\n    <F extends string>(\n      fields: {\n        [key in F]?: {\n          value: any;\n          touched?: boolean;\n        };\n      }\n    ) => {\n      setForm((prev) =>\n        reduceConfigTransform(prev, (config, field) => {\n          if (!(field in fields)) return config;\n\n          const _value = fields[field as F]?.value;\n\n          return {\n            ...config,\n            error: config.validation && config.validation(_value),\n            touched: fields[field as F]?.touched ?? config.touched,\n            value: _value ?? config.value,\n          };\n        })\n      );\n    },\n    []\n  );\n\n  //#region helper constant\n  const handlers = useMemo<Handlers<T>>(\n    () =>\n      reduceConfigTransform(form, (config, key) => ({\n        value: config.value,\n        error: config.error,\n        touched: config.touched,\n        onChange: (value: any) => setValue(key, value, true),\n      })) as Handlers<T>,\n    [setValue, form]\n  );\n\n  const isInvalidForm = useMemo(\n    () =>\n      Object.values(form).reduce(\n        (acc, { error }) => acc || Boolean(error),\n        false\n      ),\n    [form]\n  );\n\n  const values = useMemo<Values<T>>(\n    () => reduceConfigTransform(form, ({ value }) => value) as Values<T>,\n    [form]\n  );\n  //#endregion\n\n  return {\n    values,\n    handlers,\n    initialFormHandler,\n    reset,\n    clear,\n    setValues,\n    addFields,\n    removeField,\n    isInvalidForm,\n  };\n};\n","import { InitialForm, ReduceConfigTransformType } from \"./types\";\n\nexport const isPrimitive = (value: unknown): value is true =>\n  value !== Object(value);\n\nexport type CompressType<T extends Record<any, any>, F extends keyof T[any]> = {\n  [key in keyof T]: T[key][F];\n};\n\nexport const reduceConfigTransform: ReduceConfigTransformType = (\n  obj,\n  callback\n) =>\n  Object.entries(obj).reduce(\n    (acc, [key, config]) => ({\n      ...acc,\n      [key]: callback(config, key, obj),\n    }),\n    {} as any\n  );\n\nexport const initialFn = <T extends string>(initialForm: InitialForm<T>) =>\n  reduceConfigTransform(initialForm, (config) => ({\n    ...config,\n    touched: false,\n    error: config.validation && config.validation(config.value),\n  }));\n","import { HandlersConfig } from \"../types\";\n\nexport const handlersKeyExists = (\n  handlers:\n    | Record<string, HandlersConfig>\n    | Partial<Record<string, HandlersConfig>>\n): handlers is Record<string, HandlersConfig> =>\n  Boolean(Object.keys(handlers).length);\n","export const valuesKeyExists = (\n  values: Record<string, any> | Partial<Record<string, any>>\n): values is Record<string, any> => Boolean(Object.keys(values).length);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__297__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","export { useForm } from \"./use-form\";\nexport type { InitialForm } from \"./types\";\nexport { handlersKeyExists } from \"./utils/handlers-key-exists\";\nexport { valuesKeyExists } from \"./utils/values-key-exists\";\n"],"names":["useInitialFormMemo","initialForm","initialFormMemo","useRef","initialFormMemoHandler","useCallback","current","addFieldsToMemoHandler","newFields","removeFieldsFromMemoHandler","Object","fromEntries","entries","filter","field","fieldsName","includes","useForm","useState","initialFn","form","setForm","addFieldsToFormHandler","prev","removeFieldsFromFormHandler","initialFormHandler","reset","clear","reduceConfigTransform","config","value","touched","error","validation","addFields","configs","removeField","setValue","key","setValues","fields","_value","handlers","useMemo","onChange","isInvalidForm","values","reduce","acc","Boolean","isPrimitive","obj","callback","handlersKeyExists","keys","length","valuesKeyExists","module","exports","__WEBPACK_EXTERNAL_MODULE__297__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}