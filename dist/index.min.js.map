{"version":3,"sources":["webpack:///./index.ts","webpack:///./utils.ts","webpack:///external \"react\"","webpack:///webpack/bootstrap","webpack:///webpack/startup"],"names":["initialFn","initialForm","reduceConfigTransform","config","error","validation","value","touched","invalid","Boolean","useForm","useState","form","setForm","values","useMemo","setValue","useCallback","key","prev","field","_value","_touched","isPrimitive","onChange","ev","target","handlers","isInvalidForm","Object","reduce","acc","resetHandler","obj","callback","entries","module","exports","__WEBPACK_EXTERNAL_MODULE__297__","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","call"],"mappings":"klBAAA,aACA,SA4BMA,EAAY,SAA6BC,GAC7C,SAAAC,sBAAsBD,GAAa,SAACE,GAClC,IAAMC,EAAQD,EAAOE,YAAcF,EAAOE,WAAWF,EAAOG,OAC5D,cACKH,GAAM,CACTI,SAAS,EACTC,QAASC,QAAQL,GACjBA,MAAK,QAIE,EAAAM,QAAU,SAA6BT,GAC5C,MAAkB,EAAAU,UAAS,WAAM,OAAAX,EAAA,MAAhCY,EAAI,KAAEC,EAAO,KAEdC,EAAS,EAAAC,SACb,WAAM,SAAAb,sBAAsBU,GAAM,SAAC,GAAc,OAAP,aAC1C,CAACA,IAGGI,EAAW,EAAAC,aACf,SAACC,EAAkCZ,EAAYC,GAC1B,WAAf,EAAOW,GACTL,GAAQ,SAACM,GACP,SAAAjB,sBAAsBiB,GAAM,SAAChB,EAAQiB,GACnC,KAAMA,KAASF,GACb,OAAOf,EAGT,IAAIkB,EACAC,EAEA,EAAAC,YAAaL,EAAYE,IAC3BC,EAAUH,EAAYE,IAEtBC,EAAUH,EAAYE,GAAOd,MAC7BgB,EAAYJ,EAAYE,GAAOb,SAGjC,IAAMH,EAAQD,EAAOE,YAAcF,EAAOE,WAAWgB,GAErD,cACKlB,GAAM,CACTC,MAAK,EACLI,QAASC,QAAQL,GACjBG,QAASe,UAAYnB,EAAOI,QAC5BD,MAAOe,UAAUlB,EAAOG,cAK9BO,GAAQ,SAACM,G,MACDhB,EAASgB,EAAKD,GACdd,EAAQD,EAAOE,YAAcF,EAAOE,WAAWC,GACrD,cACKa,KAAI,MACND,GAAG,OACCf,GAAM,CACTC,MAAOA,EACPI,QAASC,QAAQL,GACjBG,QAASA,UAAWJ,EAAOI,QAC3BD,MAAK,aAMf,IAGIkB,EAAW,EAAAP,aACf,SAACC,GAAa,gBACZO,GAEAT,EAASE,EAAKO,EAAGC,OAASD,EAAGC,OAAOpB,MAAQmB,GAAI,MAElD,CAACT,IAGGW,EAAW,EAAAZ,SACf,WACE,SAAAb,sBAAsBU,GAAM,SAACT,EAAQe,GAAQ,cACxCf,GAAM,CACTqB,SAAUA,EAFiC,UAI/C,CAACA,EAAUZ,IAGPgB,EAAgB,EAAAb,SACpB,WACE,OAAAc,OAAOf,OAAOF,GAAMkB,QAAO,SAACC,EAAK,G,IAAEvB,EAAO,UAAO,OAAAuB,GAAOvB,KAAS,KACnE,CAACI,IASH,MAAO,CACLE,OAAM,EACNa,SAAQ,EACRK,aATmB,EAAAf,aACnB,WAAM,OAAAJ,GAAQ,WAAM,OAAAb,EAAA,QAEpB,IAOAgB,SAAQ,EACRY,cAAa,K,wVChIJ,EAAAL,YAAc,SAAIjB,GAAa,OAAAA,IAAUuB,OAAVvB,IAe/B,EAAAJ,sBAAmD,SAC9D+B,EACAC,GAEA,OAAAL,OAAOM,QAAQF,GAAKH,QAClB,SAACC,EAAK,G,MAACb,EAAG,KAAEf,EAAM,KAAM,cACnB4B,KAAG,MACLb,GAAMgB,EAAS/B,EAAQe,EAAYe,GAAI,MAE1C,M,QC7BJG,EAAOC,QAAUC,ICCbC,EAA2B,GCE/B,ODCA,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUJ,QAG3C,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,IAOV,OAHAK,EAAoBD,GAAUE,KAAKP,EAAOC,QAASD,EAAQA,EAAOC,QAASG,GAGpEJ,EAAOC,QCjBRG,CAAoB,M","file":"index.min.js","sourcesContent":["import { useCallback, useMemo, useState } from \"react\";\nimport { isPrimitive, reduceConfigTransform } from \"./utils\";\n\nexport type InitialForm<T extends keyof any> = {\n  [key in T]: {\n    value: any;\n    validation?: (\n      value: any\n    ) =>\n      | undefined\n      | {\n          errorMessage: string;\n        };\n  };\n};\n\ntype KeyList<T extends InitialForm<any>> = T extends InitialForm<infer R>\n  ? R\n  : never;\n\ntype SetValueKey<T extends InitialForm<any>> = {\n  [key in KeyList<T>]?:\n    | (string | boolean | number)\n    | {\n        value: any;\n        touched: boolean;\n      };\n};\n\nconst initialFn = <T extends InitialForm<any>>(initialForm: T) =>\n  reduceConfigTransform(initialForm, (config) => {\n    const error = config.validation && config.validation(config.value);\n    return {\n      ...config,\n      touched: false,\n      invalid: Boolean(error),\n      error,\n    };\n  });\n\nexport const useForm = <T extends InitialForm<any>>(initialForm: T) => {\n  const [form, setForm] = useState(() => initialFn(initialForm));\n\n  const values = useMemo(\n    () => reduceConfigTransform(form, ({ value }) => value),\n    [form]\n  );\n\n  const setValue = useCallback(\n    (key: KeyList<T> | SetValueKey<T>, value: any, touched: boolean) => {\n      if (typeof key === \"object\") {\n        setForm((prev) =>\n          reduceConfigTransform(prev, (config, field) => {\n            if (!(field in key)) {\n              return config;\n            }\n\n            let _value;\n            let _touched;\n\n            if (isPrimitive((key as any)[field])) {\n              _value = (key as any)[field];\n            } else {\n              _value = (key as any)[field].value;\n              _touched = (key as any)[field].touched;\n            }\n\n            const error = config.validation && config.validation(_value);\n\n            return {\n              ...config,\n              error,\n              invalid: Boolean(error),\n              touched: _touched ?? config.touched,\n              value: _value ?? config.value,\n            };\n          })\n        );\n      } else {\n        setForm((prev) => {\n          const config = prev[key];\n          const error = config.validation && config.validation(value);\n          return {\n            ...prev,\n            [key]: {\n              ...config,\n              error: error,\n              invalid: Boolean(error),\n              touched: touched ?? config.touched,\n              value,\n            },\n          };\n        });\n      }\n    },\n    []\n  );\n\n  const onChange = useCallback(\n    (key: any) => <T extends HTMLTextAreaElement | HTMLInputElement>(\n      ev: React.ChangeEvent<T> | any\n    ) => {\n      setValue(key, ev.target ? ev.target.value : ev, true);\n    },\n    [setValue]\n  );\n\n  const handlers = useMemo(\n    () =>\n      reduceConfigTransform(form, (config, key) => ({\n        ...config,\n        onChange: onChange(key),\n      })),\n    [onChange, form]\n  );\n\n  const isInvalidForm = useMemo(\n    () =>\n      Object.values(form).reduce((acc, { invalid }) => acc || invalid, false),\n    [form]\n  );\n\n  const resetHandler = useCallback(\n    () => setForm(() => initialFn(initialForm)),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  return {\n    values,\n    handlers,\n    resetHandler,\n    setValue,\n    isInvalidForm,\n  };\n};\n","type Merge<A extends Record<string, any>, B extends Record<string, any>> = {\n  [K in keyof A]: K extends keyof B ? B[K] : A[K];\n} &\n  B;\n\nexport const isPrimitive = <T>(value: T) => value !== Object(value);\n\ntype ReduceConfigTransformType = <\n  TObject extends Record<string, any>,\n  Key extends keyof TObject,\n  Result\n>(\n  obj: TObject,\n  callback: (config: TObject[Key], key: Key, obj?: TObject) => Result\n) => {\n  [k in Key]: Result extends Record<string, any>\n    ? Merge<Partial<TObject[k]>, Result>\n    : Result;\n};\n\nexport const reduceConfigTransform: ReduceConfigTransformType = (\n  obj,\n  callback\n) =>\n  Object.entries(obj).reduce(\n    (acc, [key, config]) => ({\n      ...acc,\n      [key]: callback(config, key as any, obj),\n    }),\n    {} as any\n  );\n","module.exports = __WEBPACK_EXTERNAL_MODULE__297__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(447);\n"],"sourceRoot":""}