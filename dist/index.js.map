{"version":3,"file":"index.js","mappings":"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","sources":["webpack:///./hooks/use-initial-form-memo.ts","webpack:///./use-form.ts","webpack:///./utils.ts","webpack:///./utils/handlers-key-exists.ts","webpack:///./utils/values-key-exists.ts","webpack:///external \"react\"","webpack:///webpack/bootstrap","webpack:///./index.ts"],"sourcesContent":["import { useCallback, useRef } from \"react\";\nimport { InitialForm } from \"../types\";\n\nexport const useInitialFormMemo = (initialForm?: InitialForm<string>) => {\n  const initialFormMemo = useRef(initialForm ?? {});\n\n  const initialFormMemoHandler = useCallback(\n    (initialForm: InitialForm<string>) => {\n      initialFormMemo.current = initialForm;\n    },\n    []\n  );\n\n  const addFieldsToMemoHandler = useCallback(\n    (newFields: InitialForm<string>) => {\n      initialFormMemo.current = {\n        ...newFields,\n        ...initialFormMemo.current,\n      };\n    },\n    []\n  );\n\n  const removeFieldsFromMemoHandler = useCallback(\n    <F extends any>(...fieldsName: F[]) => {\n      initialFormMemo.current = Object.fromEntries(\n        Object.entries(initialFormMemo.current).filter(\n          ([field]) => !fieldsName.includes(field as F)\n        )\n      );\n    },\n    []\n  );\n\n  return {\n    initialFormMemo,\n    initialFormMemoHandler,\n    addFieldsToMemoHandler,\n    removeFieldsFromMemoHandler,\n  };\n};\n","import { useInitialFormMemo } from \"./hooks/use-initial-form-memo\";\nimport { useCallback, useMemo, useState } from \"react\";\nimport { Handlers, InitialForm, Values } from \"./types\";\nimport { initialFn, reduceConfigTransform } from \"./utils\";\n\nexport const useForm = <T extends InitialForm<any> | undefined>(\n  initialForm?: T\n) => {\n  const {\n    initialFormMemo,\n    initialFormMemoHandler,\n    addFieldsToMemoHandler,\n    removeFieldsFromMemoHandler,\n  } = useInitialFormMemo(initialForm);\n\n  //#region form\n  const [form, setForm] = useState(() =>\n    initialForm ? initialFn(initialForm) : initialFn({})\n  );\n\n  const addFieldsToFormHandler = useCallback(\n    (newFields: ReturnType<typeof initialFn>) => {\n      setForm((prev) => ({\n        ...newFields,\n        ...prev,\n      }));\n    },\n    []\n  );\n\n  const removeFieldsFromFormHandler = useCallback(\n    <F extends any>(...fieldsName: F[]) => {\n      setForm((prev) =>\n        Object.fromEntries(\n          Object.entries(prev).filter(\n            ([field]) => !fieldsName.includes(field as F)\n          )\n        )\n      );\n    },\n    []\n  );\n\n  const initialFormHandler = useCallback(\n    (initialForm: InitialForm<string>) => {\n      setForm(() => initialFn(initialForm));\n      initialFormMemoHandler(initialForm);\n    },\n    [initialFormMemoHandler]\n  );\n\n  const reset = useCallback(\n    () => setForm(() => initialFn(initialFormMemo.current)),\n    [initialFormMemo]\n  );\n\n  const clear = useCallback(\n    () =>\n      setForm((prev) =>\n        reduceConfigTransform(prev, (config) => ({\n          ...config,\n          value: \"\",\n          touched: true,\n          error: config.validation && config.validation(\"\"),\n        }))\n      ),\n    []\n  );\n  //#endregion\n\n  const addFields = useCallback(\n    (configs: InitialForm<string>) => {\n      addFieldsToMemoHandler(configs);\n\n      addFieldsToFormHandler(initialFn(configs));\n    },\n    [addFieldsToMemoHandler, addFieldsToFormHandler]\n  );\n\n  const removeField = useCallback(\n    <F extends any>(...fieldsName: F[]) => {\n      removeFieldsFromMemoHandler(...fieldsName);\n\n      removeFieldsFromFormHandler(...fieldsName);\n    },\n    [removeFieldsFromMemoHandler, removeFieldsFromFormHandler]\n  );\n\n  const setValue = useCallback(\n    (key: keyof T, value: any, touched?: boolean) => {\n      setForm((prev) => {\n        const config = prev[key];\n\n        if (!config) return prev;\n\n        return {\n          ...prev,\n          [key]: {\n            ...config,\n            error: config.validation && config.validation(value),\n            touched: touched ?? config.touched,\n            value,\n          },\n        };\n      });\n    },\n    []\n  );\n\n  const setValues = useCallback(\n    <F extends string>(\n      fields: {\n        [key in F]?: {\n          value: any;\n          touched?: boolean;\n        };\n      }\n    ) => {\n      setForm((prev) =>\n        reduceConfigTransform(prev, (config, field) => {\n          if (!(field in fields)) return config;\n\n          const _value = fields[field as F]?.value;\n\n          return {\n            ...config,\n            error: config.validation && config.validation(_value),\n            touched: fields[field as F]?.touched ?? config.touched,\n            value: _value ?? config.value,\n          };\n        })\n      );\n    },\n    []\n  );\n\n  //#region helper constant\n  const handlers = useMemo<Handlers<T>>(\n    () =>\n      reduceConfigTransform(form, (config, key) => ({\n        value: config.value,\n        error: config.error,\n        touched: config.touched,\n        onChange: (value: any) => setValue(key, value, true),\n      })) as Handlers<T>,\n    [setValue, form]\n  );\n\n  const isInvalidForm = useMemo(\n    () =>\n      Object.values(form).reduce(\n        (acc, { error }) => acc || Boolean(error),\n        false\n      ),\n    [form]\n  );\n\n  const values = useMemo<Values<T>>(\n    () => reduceConfigTransform(form, ({ value }) => value) as Values<T>,\n    [form]\n  );\n  //#endregion\n\n  return {\n    values,\n    handlers,\n    initialFormHandler,\n    reset,\n    clear,\n    setValues,\n    addFields,\n    removeField,\n    isInvalidForm,\n  };\n};\n","import { InitialForm, ReduceConfigTransformType } from \"./types\";\n\nexport const isPrimitive = (value: unknown): value is true =>\n  value !== Object(value);\n\nexport type CompressType<T extends Record<any, any>, F extends keyof T[any]> = {\n  [key in keyof T]: T[key][F];\n};\n\nexport const reduceConfigTransform: ReduceConfigTransformType = (\n  obj,\n  callback\n) =>\n  Object.entries(obj).reduce(\n    (acc, [key, config]) => ({\n      ...acc,\n      [key]: callback(config, key, obj),\n    }),\n    {} as any\n  );\n\nexport const initialFn = <T extends string>(initialForm: InitialForm<T>) =>\n  reduceConfigTransform(initialForm, (config) => ({\n    ...config,\n    touched: false,\n    error: config.validation && config.validation(config.value),\n  }));\n","import { HandlersConfig } from \"../types\";\n\nexport const handlersKeyExists = (\n  handlers:\n    | Record<string, HandlersConfig>\n    | Partial<Record<string, HandlersConfig>>\n): handlers is Record<string, HandlersConfig> =>\n  Boolean(Object.keys(handlers).length);\n","export const valuesKeyExists = (\n  values: Record<string, any> | Partial<Record<string, any>>\n): values is Record<string, any> => Boolean(Object.keys(values).length);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__297__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","export { useForm } from \"./use-form\";\nexport type { InitialForm } from \"./types\";\nexport { handlersKeyExists } from \"./utils/handlers-key-exists\";\nexport { valuesKeyExists } from \"./utils/values-key-exists\";\n"],"names":[],"sourceRoot":""}